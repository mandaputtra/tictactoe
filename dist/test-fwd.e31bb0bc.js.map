{"version":3,"sources":["index.js"],"names":["inputBoardSize","document","getElementById","restartButton","BOARD_SIZE","value","EMPTY","boxes","moves","score","X_WIN","O_WIN","WIN","init","board","createElement","setAttribute","identifier","i","row","appendChild","j","cell","classList","add","addEventListener","set","push","startNewGame","changeBoardSize","getElementsByTagName","remove","turn","forEach","square","innerHTML","win","clicked","memberOf","className","split","length","testClass","items","contains","selector","text","elements","querySelectorAll","filter","call","element","RegExp","test","textContent","confirm","restart","alert"],"mappings":"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","file":"test-fwd.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const inputBoardSize = document.getElementById('board-size')\nconst restartButton = document.getElementById('restart')\n\nlet BOARD_SIZE = inputBoardSize.value\nconst EMPTY = \"&nbsp;\"\nlet boxes = []\nlet moves = \"X\"\nlet score = 0\nlet X_WIN = 0\nlet O_WIN = 0\nlet WIN = null\n\nfunction init() {\n  let board = document.createElement('table');\n  board.setAttribute(\"border\", 1);\n  board.setAttribute(\"cellspacing\", 0);\n\n  var identifier = 1;\n  for (var i = 0; i < BOARD_SIZE; i++) {\n    var row = document.createElement('tr');\n    board.appendChild(row);\n    for (var j = 0; j < BOARD_SIZE; j++) {\n      var cell = document.createElement('td');\n      cell.setAttribute('height', 120);\n      cell.setAttribute('width', 120);\n      cell.setAttribute('align', 'center');\n      cell.setAttribute('valign', 'center');\n      cell.classList.add('col' + j, 'row' + i);\n      if (i == j) {\n        cell.classList.add('diagonal0');\n      }\n      if (j == BOARD_SIZE - i - 1) {\n        cell.classList.add('diagonal1');\n      }\n      cell.identifier = identifier;\n      cell.addEventListener(\"click\", set);\n      row.appendChild(cell);\n      boxes.push(cell);\n      identifier += identifier;\n    }\n  }\n\n  document.getElementById(\"gameboard\").appendChild(board);\n  startNewGame();\n}\n\n// change board size\nfunction changeBoardSize() {\n  // Remove Table Element\n  document.getElementsByTagName('table')[0].remove()\n  BOARD_SIZE = inputBoardSize.value\n  init()\n}\ninputBoardSize.addEventListener('change', changeBoardSize)\n\n// Start new game\nfunction startNewGame() {\n  score = {\n    \"X\": 0,\n    \"O\": 0\n  };\n  WIN = null\n  moves = 0;\n  turn = \"X\";\n  boxes.forEach(function (square) {\n    square.innerHTML = EMPTY;\n  });\n}\n\n// Check win condition\nfunction win(clicked) {\n  // Get all cell classes\n  var memberOf = clicked.className.split(/\\s+/);\n  for (var i = 0; i < memberOf.length; i++) {\n    var testClass = '.' + memberOf[i];\n    var items = contains('#gameboard ' + testClass, turn);\n    // winning condition: turn == BOARD_SIZE\n    if (items.length == BOARD_SIZE) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// check if a cell contains text\nfunction contains(selector, text) {\n  var elements = document.querySelectorAll(selector);\n  return [].filter.call(elements, function (element) {\n    return RegExp(text).test(element.textContent);\n  });\n}\n\n// set the table per turn\nfunction set() {\n  if (this.innerHTML !== EMPTY) {\n    return;\n  }\n  // Someone already win\n  if (WIN) {\n    if (confirm(`Player ${turn} already win, Restart the game?`)) {\n      restart()\n      return;\n    } else {\n      return\n    }\n  }\n  this.innerHTML = turn;\n  moves += 1;\n  score[turn] += this.identifier;\n  if (win(this)) {\n    WIN = turn\n    if (turn === \"X\") {\n      document.getElementById('x-score').innerHTML = X_WIN + 1\n    } else {\n      document.getElementById('o-score').innerHTML = O_WIN + 1\n    }\n    alert('Winner: Player ' + turn);\n  } else if (moves === BOARD_SIZE * BOARD_SIZE) {\n    alert(\"Draw\");\n  } else {\n    turn = turn === \"X\" ? \"O\" : \"X\";\n    document.getElementById('turn').textContent = `TURN : PLAYER ${turn}`;\n  }\n}\n\n// restart the game\nfunction restart() {\n  startNewGame()\n}\nrestartButton.addEventListener('click', restart)\n\n//  initialize the game\ninit();\n"]}